name: Sync Google Sheet to JSON

on:
  schedule:
    - cron: "0 * * * *"   # 每小時執行一次
  workflow_dispatch:       # 允許手動觸發

permissions:
  contents: write          # 允許 workflow 寫入 / 開 PR

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas

      - name: Fetch Google Sheet CSV
        run: |
          set -e
          URL="https://docs.google.com/spreadsheets/d/e/2PACX-1vSpt865HzuchDUxgZIPL3RBbZ-VneXtRFgM0Gt0fDAla2yk_Afh4t5iw-6a2U0lmqSiiQagcSE6Rjk9/pub?gid=0&single=true&output=csv"
          CODE=$(curl -sSL -w "%{http_code}" -o sheet.csv "$URL")
          echo "HTTP_STATUS=$CODE"
          if [ "$CODE" -ne 200 ]; then
            echo "Download failed" >&2
            exit 1
          fi
          echo "==== sheet.csv meta ===="
          wc -l sheet.csv || true
          echo "---- head ----" && head -n 5 sheet.csv || true

      - name: Convert CSV to JSON
        run: |
          python - <<'PY'
          import pandas as pd, json, sys
          try:
              df = pd.read_csv('sheet.csv').fillna('')
          except Exception as e:
              print('CSV read error:', e)
              sys.exit(1)
          print(f'Rows loaded: {len(df)}')

          def split_list(val):
              if isinstance(val, str) and val.strip():
                  s = val.replace('；',';').replace('，',',')
                  parts = []
                  for token in s.replace(';',',').split(','):
                      token = token.strip()
                      if token:
                          parts.append(token)
                  return parts
              return []

          def split_states(val):
              if isinstance(val, str) and val.strip():
                  s = val
                  for sp in [',',';','/','|','、']:
                      s = s.replace(sp, ',')
                  return [x.strip() for x in s.split(',') if x.strip()]
              return []

          out = []
          for _, r in df.iterrows():
              item = {
                  'name': r.get('name',''),
                  'category': r.get('category',''),
                  'tags': split_list(r.get('tags','')),
                  'area': r.get('area',''),
                  'address': r.get('address',''),
                  'phone': r.get('phone',''),
                  'website': r.get('website',''),
              }
              states = split_states(r.get('states',''))
              cities = split_list(r.get('cities',''))
              state  = r.get('state','')
              city   = r.get('city','')
              if states:
                  item['states'] = states
              elif state:
                  item['state'] = state
              if cities:
                  item['cities'] = cities
              elif city:
                  item['city'] = city
              out.append(item)

          with open('businesses.json','w',encoding='utf-8') as f:
              json.dump(out, f, ensure_ascii=False, indent=2, sort_keys=True)
          print('Wrote businesses.json with', len(out), 'items')
          PY

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Update businesses.json from Google Sheet"
          committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          title: "chore: sync businesses.json from Google Sheet"
          body: |
            This PR was auto-generated by the **Sync Google Sheet to JSON** workflow.
            - Source: Google Sheet (published CSV)
            - Output: `businesses.json`
          branch: automation/sheet-sync
          delete-branch: true

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Update businesses.json from Google Sheet"
          committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          title: "chore: sync businesses.json from Google Sheet"
          body: |
            Auto-generated by Sync Google Sheet to JSON.
          branch: automation/sheet-sync
          delete-branch: true

      - name: Show PR info (if created)
        if: ${{ steps.cpr.outputs.pull-request-number != '' }}
        run: |
          echo "PR #${{ steps.cpr.outputs.pull-request-number }}"
          echo "${{ steps.cpr.outputs.pull-request-url }}"

      - name: No PR created
        if: ${{ steps.cpr.outputs.pull-request-number == '' }}
        run: echo "No PR created (no changes or branch already up-to-date)."
