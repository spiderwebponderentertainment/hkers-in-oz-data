name: Scrape SBS zh-Hant

on:
  schedule:
    - cron: "15 * * * *"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "news-bot"
          git config user.email "news-bot@users.noreply.github.com"

      # Keep local main up to date before we run anything
      - name: Rebase onto latest main
        shell: bash
        run: |
          set -e
          git fetch origin main
          git rebase origin/main || (git rebase --abort && echo "Rebase conflict, aborting." && exit 1)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r workers/requirements.txt

      - name: Run scraper
        run: python workers/scrape_sbs_zh_hant.py

      - name: Commit changes
        shell: bash
        run: |
          set -e
          git add -A
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "chore: update SBS zh-Hant feeds"
          else
            echo "No changes to commit."
          fi

      - name: Push with retry
        shell: bash
        run: |
          set -e
          # If there are no commits ahead of origin/main, skip pushing
          AHEAD=$(git rev-list --count origin/main..HEAD || echo 0)
          if [[ "$AHEAD" -eq 0 ]]; then
            echo "Nothing to push."
            exit 0
          fi

          n=0
          until [[ $n -ge 3 ]]; do
            if git push; then
              echo "Pushed successfully."
              exit 0
            fi
            echo "Push failed, retrying… ($((n+1))/3)"
            # Bring remote changes in, keep our commits on top
            git fetch origin main
            if ! git rebase origin/main; then
              git rebase --abort
              echo "Rebase conflict — stopping to avoid an infinite loop."
              exit 1
            fi
            n=$((n+1))
            sleep 3
          done

          echo "Push still failing after retries."
          exit 1

